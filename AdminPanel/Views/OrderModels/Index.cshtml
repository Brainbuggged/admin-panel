@model IEnumerable<AdminPanel.Models.Models.NSI_Order.OrderModel>

@{
    ViewData["Title"] = "OrderModels";
}

<h1>Заказы</h1>
<table id="orders" class="display">
    <thead>
        <tr>
            <td hidden>
                @Html.DisplayNameFor(model => model.id)
            </td>
            <th>
                @Html.DisplayNameFor(model => model.number)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.position_count)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.positions_prise)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.delivery_prise)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.total_prise)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.date)
            </th>
            <th>

                @Html.DisplayNameFor(model => model.status)
            </th>
            <th>
                Продавец
            </th>
            <th>
                Клиент
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr style="cursor:pointer">
                <td hidden>
                    @Html.DisplayFor(modelItem => item.id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.number)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.position_count)
                </td>
                <td>
                    @{
                        var positions_prise = Math.Round(item.positions_prise, 2);
                    }
                    @positions_prise руб
                </td>
                <td>
                    @{
                        var delivery_prise = Math.Round(item.delivery_prise, 2);
                    }
                    @delivery_prise руб
                </td>
                <td>
                    @{
                        var total_prise = Math.Round(item.total_prise, 2);
                    }
                    @total_prise руб
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.date)
                </td>
                <td>
                    @item.status.GetText()
                </td>
                <td>
                    @{
                        var vendor = item.vendor.surname + " " +  item.vendor.name;
                    }
                    @vendor
                </td>
                <td>
                    @{
                        var client = item.client.surname + " " + item.client.name;
                    }
                    @client
                </td>
            </tr>
        }
    </tbody>
</table>
<hr />

<div id="divOrderProducts">
    @*<p id="pTasks">@tasksTitle</p>*@
    <table id="OrderModelProducts" class="cell-border">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(model => model.products.First().photo)</th>
                <th>@Html.DisplayNameFor(model => model.products.First().name)</th>
                <th>@Html.DisplayNameFor(model => model.products.First().category_name)</th>
                <th>@Html.DisplayNameFor(model => model.products.First().brand)</th>
                <th>@Html.DisplayNameFor(model => model.products.First().prise)</th>
                <th>@Html.DisplayNameFor(model => model.products.First().count)</th>
                <th>@Html.DisplayNameFor(model => model.products.First().total_prise)</th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
</div>
<hr />

<div id="divOrderStatusChangeModel">
    <table id="OrderStatusChangeModel" class="cell-border">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(model => model.status_history.First().old_status)</th>
                <th>@Html.DisplayNameFor(model => model.status_history.First().new_status)</th>
                <th>@Html.DisplayNameFor(model => model.status_history.First().date)</th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
</div>

<script>
    $(document).ready(function () {
        $('#orders').DataTable({
            "language": jsonLanguageDataTable,
            "select": true,
            "pageLength": 5
        });

        var $orderModelProducts = $('#OrderModelProducts tbody');
        var $orderStatusChangeModel= $('#OrderStatusChangeModel tbody');


        var firstTry = false;
        //var OrderModelProducts;
        //var OrderStatusChangeModel;
        //createDataTables(true, true);
        createDataTables(true, true);

        function getOrderProductModels(
            link,
            rowData) {
            ajaxRequestTasks = $.ajax({
                type: "GET",
                url: link,
                data: { orderModelId: rowData },
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    $('#OrderModelProducts tbody').empty();

                    orderProductModels = data;
                    var html;
                    for (var i = 0; i < orderProductModels.length; i++) {
                        html += '<tr>' + 
                            '<td>' +
                            '<img src="https://drive.google.com/uc?export=view&id=' + orderProductModels[i].photo + '" width="100px" height="100px" />' +
                            '</td>' +
                            '<td>'+
                            '<a href="http://budevice.ru/catalog/"' + orderProductModels[i].product_number + '>' + orderProductModels[i].name + '</a>' + '</td > '+
                            '<td>' + orderProductModels[i].category_name + '</td>' +
                            '<td>' + orderProductModels[i].brand + '</td>' +
                            '<td>' + orderProductModels[i].prise + ' руб' + '</td>' +
                            '<td>' + orderProductModels[i].count + '</td>' +
                            '<td>' + orderProductModels[i].total_prise + ' руб' + '</td>' +
                            '</tr>';
                    }
                    $('#OrderModelProducts tbody').append(html);


                },
                error: function (er) {
                    if (er.statusText == 'abort') {
                        return;
                    }
                    alert("An error occured");
                }
            });
        }

        function getOrderStatusChangeModel(
            link,
            rowData) {
            ajaxRequestTasks = $.ajax({
                type: "GET",
                url: link,
                data: { orderModelId: rowData },
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    $('#OrderStatusChangeModel tbody').empty();

                    orderStatusChangeModels = data;
                    var html;
                    for (var i = 0; i < orderStatusChangeModels.length; i++) {
                        if(orderStatusChangeModels[i].old_status == orderStatusChangeModels[i].new_status){
                            html += '<tr><td>'+'</td>' +
                                '<td>' + orderStatusChangeModels[i].new_status + '</td>' +
                                '<td>' + orderStatusChangeModels[i].date + '</td>' +
                                '</tr>';
                        }
                        else{
                            html += '<tr><td>' + orderStatusChangeModels[i].old_status + '</td>' +
                                '<td>' + orderStatusChangeModels[i].new_status + '</td>' +
                                '<td>' + orderStatusChangeModels[i].date + '</td>' +
                                '</tr>';

                        }
                    }

                    $('#OrderStatusChangeModel tbody').append(html);
                },
                error: function (er) {
                    if (er.statusText == 'abort') {
                        return;
                    }
                    alert("An error occured");
                }
            });
        }

        $(document).on("click", "#orders tbody tr", function (e) {
            var currentRow = this;
            currentOrderModel = currentRow;
            var modelRow = $('#orders').DataTable().row(currentRow).data();


            if (firstTry) {
                OrderModelProducts.destroy();
                $orderModelProducts.empty();
                OrderStatusChangeModel.destroy();
                $orderStatusChangeModel.empty();
                firstTry = true;
            }
            getOrderProductModels(
                '@Url.Action("GetOrderProductModels", "OrderModels")',
                modelRow[0]
            );

            getOrderStatusChangeModel(
                '@Url.Action("GetStatusChangeModel", "OrderModels")',
                modelRow[0]
            );



        });
    });
    //}
</script>
